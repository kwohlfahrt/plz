---
- hosts: all
  remote_user: root
  become: yes
  tasks:
    - name: Copy the SSH private key
      copy:
        src: "{{ ssh_private_key_file }}"
        dest: /home/ubuntu/.ssh/plz
        owner: ubuntu
        group: ubuntu
        mode: 0600

    - name: Log in to AWS ECR
      shell: |
        eval "$(aws ecr get-login --no-include-email --region {{ aws_region }})"

    - name: Start the services
      docker_service:
        project_name: controller
        pull: yes
        definition:
          version: '2.3'

          services:
            all:
              image: docker:stable-git
              command:
                - echo
                - 'Started.'
              depends_on:
                controller:
                  condition: service_healthy

            controller:
              image: '{{ image }}'
              environment:
                CONFIGURATION: |
                  port = 80
                  data_dir = "/data"
                  redis_host = redis
                  instances = {
                    provider = aws-ec2
                    region = "{{ aws_region }}"
                    project = "{{ aws_project }}"
                    key_name = "{{ key_name }}"
                    group_name = "{{ environment_name }}"
                  }
                  images = {
                    provider = aws-ecr
                    region = "{{ aws_region }}"
                    repository = "{{ aws_project }}/plz/builds"
                  }
                  results = {
                    provider = aws-s3
                    bucket = "{{ results_s3_bucket }}"
                  }
              ports:
                - "{{ service_port }}:80"
              volumes:
                - /cache/controller:/data
                - /home/ubuntu/.ssh/plz:/root/.ssh/id_rsa:ro
                - /var/run/docker.sock:/var/run/docker.sock
              depends_on:
                redis:
                  condition: service_started

            redis:
              image: redis:4
              entrypoint: redis-server
              volumes:
                - redis_data:/data

          volumes:
            redis_data: {}

    - name: Set cron job for tidying
      cron:
        name: "Harvesting every minute"
        job: "curl -X POST localhost:{{service_port}}/executions/harvest"
