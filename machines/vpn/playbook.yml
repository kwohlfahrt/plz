---
- hosts: all
  remote_user: root
  become: yes
  gather_facts: no
  tasks:
    - name: Install Python
      raw: '[[ -n "$(command -v python >& /dev/null)" ]] || ( sudo apt-get update -qq && sudo apt-get install -qqy python )'

- hosts: all
  remote_user: root
  become: yes
  vars:
    keys_device: '/dev/xvdk'
    keys_dir: '/keys'
  tasks:
    - name: Update the APT repositories
      apt:
        update_cache: yes
    - name: Install aptitude
      apt:
        name: aptitude
    - name: Upgrade everything
      apt:
        upgrade: full
    - name: Set up the trivial stuff
      apt:
        name: '{{ item }}'
      with_items:
        - apt-transport-https
        - ca-certificates
        - curl
        - mosh

    - name: Install OpenVPN
      apt:
        name: openvpn
    - name: Install easy-rsa
      apt:
        name: easy-rsa

    - name: Format the keys volume
      filesystem:
        dev: '{{ keys_device }}'
        fstype: ext4
    - name: Mount the keys volume
      mount:
        src: '{{ keys_device }}'
        fstype: ext4
        path: '{{ keys_dir }}'
        state: mounted
    - name: Set the write privileges for the keys volume
      file:
        path: '{{ keys_dir }}'
        mode: 0777

- hosts: all
  vars:
    easy_rsa_dir: '/usr/share/easy-rsa'
    keys_dir: '/keys'
    easy_rsa_environment:
      OPENSSL: openssl
      PKCS11TOOL: pkcs11-tool
      GREP: grep
      KEY_CONFIG: '{{ easy_rsa_dir }}/openssl-1.0.0.cnf'
      KEY_DIR: '{{ keys_dir }}'
      KEY_SIZE: 2048
      CA_EXPIRE: 3650
      KEY_EXPIRE: 3650
      KEY_NAME: 'OpenVPN'
      KEY_ORG: 'Prodo Tech Ltd.'
      KEY_OU: 'Infrastructure'
      KEY_EMAIL: 'webmaster@prodo.ai'
      KEY_CITY: 'London'
      KEY_PROVINCE: 'England'
      KEY_COUNTRY: 'GB'
  tasks:
    - name: Create /keys/index.txt
      copy:
        dest: /keys/index.txt
        content: ''
        force: no
    - name: Create /keys/serial
      copy:
        dest: /keys/serial
        content: '01'
        force: no

    - name: Check for the Diffie-Helman parameters
      stat:
        path: '{{ keys_dir }}/dh2048.pem'
      register: diffie_helman_parameters
    - name: Create the Diffie-Helman parameters
      command: '{{ easy_rsa_dir }}/build-dh'
      environment: '{{ easy_rsa_environment }}'
      when: 'not diffie_helman_parameters.stat.exists'

    - name: Check for the CA key
      stat:
        path: '{{ keys_dir }}/ca.key'
      register: ca_key
    - name: Create the CA key
      command: '{{ easy_rsa_dir }}/pkitool --initca'
      environment: '{{ easy_rsa_environment }}'
      when: 'not ca_key.stat.exists'

    - name: Check for the server key
      stat:
        path: '{{ keys_dir }}/server.key'
      register: server_key
    - name: Create the server key
      command: '{{ easy_rsa_dir }}/pkitool --server server'
      environment: '{{ easy_rsa_environment }}'
      when: 'not server_key.stat.exists'

- hosts: all
  remote_user: root
  become: yes
  tasks:
    - name: Enable IP forwarding
      sysctl:
        name: net.ipv4.ip_forward
        value: 1
      notify: 'Restart OpenVPN'
    - name: Create the server configuration
      copy:
        src: server.conf
        dest: /etc/openvpn/server.conf
      notify: 'Restart OpenVPN'
    - name: Start OpenVPN
      service:
        name: openvpn@server
        state: started
        enabled: yes
  handlers:
    - name: Restart OpenVPN
      service:
        name: openvpn@server
        state: restarted
        enabled: yes
